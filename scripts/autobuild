#!/bin/bash

die() {
    echo "$@" >&2
    exit 1
}

bitbake_var() {
    set -e
    cd "${BUILDPATH}"
    bitbake -e system-image 2>&1 | egrep "^($@)="
}

set -x

RECIPE_DIR="`dirname $0`"
while [ ! -d "${RECIPE_DIR}/conf" ];
do
    RECIPE_DIR="`dirname ${RECIPE_DIR}`"
done
test -z "${OEROOT}" && OEROOT=`readlink -f ${RECIPE_DIR}/../poky`
. ${OEROOT}/scripts/oe-init-bashrc
DISTRO_VERSION_FILE="conf/distro/rdm.conf"
DISTRO_VERSION_PATH="${RECIPE_DIR}/${DISTRO_VERSION_FILE}"
BUILDPATH="$1"; shift
BRANCH="$1"; shift

set -e

oe_builddir use $BUILDPATH

REPOS=`oe_builddir repos`
for d in ${REPOS}
do
    cd $d
    git fetch --all
    git checkout $BRANCH || git checkout master
    git pull --rebase
done

# XXX good example why we shall rewrite it as soon as pkgsrc is up-to-date (Packager::Utils ^^)
BITBAKE_SETTINGS=`bitbake_var "PV|BSPDIR" | sed -e "s/PV/SYSIMG_VERSION/"`
eval $BITBAKE_SETTINGS

cd "${RECIPE_DIR}"
git log -n 1 | grep "bump.*${SYSIMG_VERSION}" && die "Image is up to date"

oe_builddir prune
cd "${BUILDPATH}"
mkdeployimgs "$@"
time env APPLY_TS=null TARGETS="update.homepilot.de" deployimgs

# bump
PS=`printf 'my @v = split(/\./, "%s"); $v[$#v]++; print join( ".", @v)\n' "${SYSIMG_VERSION}"`
SYSIMG_BUMPED=`perl -le "$PS"`

for d in ${REPOS}
do
    cd "$d"
    git tag "$SYSIMG_VERSION" && git push --tags || :
done

(cd "${RECIPE_DIR}" && sed -i -e "s/${SYSIMG_VERSION}/${SYSIMG_BUMPED}/" "${DISTRO_VERSION_FILE}")
(cd "${RECIPE_DIR}" && git commit -m "bump version after release to ${SYSIMG_BUMPED}" "${DISTRO_VERSION_FILE}" && git push)
