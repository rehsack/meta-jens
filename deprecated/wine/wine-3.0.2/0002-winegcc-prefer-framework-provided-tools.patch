From 5f6c600be89af41a8fdc4dd9f239ff061dbf7cb1 Mon Sep 17 00:00:00 2001
From: Jens Rehsack <sno@netbsd.org>
Date: Mon, 30 Jul 2018 15:22:50 +0200
Subject: [PATCH 2/2] winegcc: prefer framework provided tools

Build frameworks like PkgSrc or Open-Embedded specify the right
tools to use in environment variables like $CC, $CXX or $LD,
respectively.

Those specified tools contain all relevant target parameters,
eg. floating point type, machine definition, register usage,
sysroot, ... -- so it's kind-of dangerous to ignore them.

Signed-off-by: Jens Rehsack <sno@netbsd.org>
---
 tools/winegcc/winegcc.c | 22 +++++++++++++---------
 1 file changed, 13 insertions(+), 9 deletions(-)

diff --git a/tools/winegcc/winegcc.c b/tools/winegcc/winegcc.c
index 80dba4c13b..79f1814d4d 100644
--- a/tools/winegcc/winegcc.c
+++ b/tools/winegcc/winegcc.c
@@ -292,11 +292,15 @@ static char* get_temp_file(const char* prefix, const char* suffix)
     return tmp;
 }
 
-static char* build_tool_name(struct options *opts, const char* base, const char* deflt)
+static char* build_tool_name(struct options *opts, const char* base, const char* deflt, const char *env_name)
 {
     char* str;
 
-    if (opts->target && opts->version)
+    if(NULL != (str = getenv(env_name)))
+    {
+        str = xstrdup(str);
+    }
+    else if (opts->target && opts->version)
     {
         str = strmake("%s-%s-%s", opts->target, base, opts->version);
     }
@@ -321,14 +325,14 @@ static const strarray* get_translator(struct options *opts)
     switch(opts->processor)
     {
     case proc_cpp:
-        str = build_tool_name(opts, "cpp", CPP);
+        str = build_tool_name(opts, "cpp", CPP, "CPP");
         break;
     case proc_cc:
     case proc_as:
-        str = build_tool_name(opts, "gcc", CC);
+        str = build_tool_name(opts, "gcc", CC, "CC");
         break;
     case proc_cxx:
-        str = build_tool_name(opts, "g++", CXX);
+        str = build_tool_name(opts, "g++", CXX, "CXX");
         break;
     default:
         assert(0);
@@ -509,8 +513,8 @@ static void compile(struct options* opts, const char* lang)
 	/* mixing different C and C++ compilers isn't supported in configure anyway */
 	case proc_cc:
 	case proc_cxx:
-            gcc = strarray_fromstring(build_tool_name(opts, "gcc", CC), " ");
-            gpp = strarray_fromstring(build_tool_name(opts, "g++", CXX), " ");
+            gcc = strarray_fromstring(build_tool_name(opts, "gcc", CC, "CC"), " ");
+            gpp = strarray_fromstring(build_tool_name(opts, "g++", CXX, "CXX"), " ");
             for ( j = 0; !gcc_defs && j < comp_args->size; j++ )
             {
                 const char *cc = comp_args->base[j];
@@ -1029,8 +1033,8 @@ static void build(struct options* opts)
 
     /* run winebuild to generate the .spec.o file */
     spec_args = get_winebuild_args( opts );
-    strarray_add( spec_args, strmake( "--cc-cmd=%s", build_tool_name( opts, "gcc", CC )));
-    strarray_add( spec_args, strmake( "--ld-cmd=%s", build_tool_name( opts, "ld", LD )));
+    strarray_add( spec_args, strmake( "--cc-cmd=%s", build_tool_name( opts, "gcc", CC, "CC" )));
+    strarray_add( spec_args, strmake( "--ld-cmd=%s", build_tool_name( opts, "ld", LD, "LD" )));
 
     spec_o_name = get_temp_file(output_name, ".spec.o");
     if (opts->force_pointer_size)
-- 
2.15.2 (Apple Git-101.1)

